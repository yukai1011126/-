<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <packaging>pom</packaging>
    <version>${version}</version>

    <properties>
        <!--java版本-->
        <java.version>1.8</java.version>
        <!--编码-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--creed版本-->
        <creed.version>0.4-SNAPSHOT</creed.version>
        <!--配置文件目录-->
        <config.basedir>${basedir}</config.basedir>
        <!--控制是否检测-->
        <disable.checks>false</disable.checks>
        <!--主要依赖版本-->
        <lombok.version>1.18.2</lombok.version>
        <mysql-connector-java.version>5.1.47</mysql-connector-java.version>
        <mybatis-plus.version>3.0.3</mybatis-plus.version>
        <jetcache.version>2.5.10.1</jetcache.version>
        <objenesis.version>2.6</objenesis.version>
        <!--插件版本-->
        <flatten-maven-plugin.version>1.0.1</flatten-maven-plugin.version>
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
        <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
        <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>
        <maven-checkstyle-plugin.version>3.0.0</maven-checkstyle-plugin.version>
        <checkstyle.version>8.11</checkstyle.version>
        <maven-pmd-plugin.version>3.8</maven-pmd-plugin.version>
        <p3c-pmd.version>1.3.5</p3c-pmd.version>
        <findbugs-maven-plugin.version>3.0.5</findbugs-maven-plugin.version>
        <spring-boot-maven-plugin.version>2.0.4.RELEASE</spring-boot-maven-plugin.version>
        <dockerfile-maven-plugin.version>1.4.4</dockerfile-maven-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <!--docker 插件配置-->
        <docker.image.prefix>huifumanlove</docker.image.prefix>
        <docker.config.label>develop</docker.config.label>
        <docker.config.profile>dev</docker.config.profile>
    </properties>

    <repositories>
        <repository>
            <id>nexus</id>
            <name>jufan-group-public</name>
            <url>http://svn.jufandev.com:8087/nexus/content/groups/public</url>
            <snapshots>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>nexus</id>
            <name>jufan-group-public</name>
            <url>http://svn.jufandev.com:8087/nexus/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>
    <distributionManagement>
        <repository>
            <id>nexus</id>
            <name>jufan-hosted-release</name>
            <url>http://svn.jufandev.com:8087/nexus/content/repositories/release</url>
        </repository>
        <snapshotRepository>
            <id>nexus</id>
            <name>jufan-hosted-snapshots</name>
            <url>http://svn.jufandev.com:8087/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <dependencyManagement>
        <dependencies>
            <!--creed dependencies-->
            <dependency>
                <artifactId>dependencies</artifactId>
                <groupId>com.geercode.creed</groupId>
                <version>${creed.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <!--local bom-->
            <dependency>
                <groupId>${groupId}</groupId>
                <artifactId>${rootArtifactId}-repo</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>${groupId}</groupId>
                <artifactId>${rootArtifactId}-domain</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>${groupId}</groupId>
                <artifactId>${rootArtifactId}-service</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>${groupId}</groupId>
                <artifactId>${rootArtifactId}-scene</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>${groupId}</groupId>
                <artifactId>${rootArtifactId}-web</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>${groupId}</groupId>
                <artifactId>${rootArtifactId}-stub</artifactId>
                <version>${version}</version>
            </dependency>
            <!--main materials-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <scope>provided</scope>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
                <scope>runtime</scope>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alicp.jetcache</groupId>
                <artifactId>jetcache-starter-redis-lettuce</artifactId>
                <version>${jetcache.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alicp.jetcache</groupId>
                <artifactId>jetcache-anno</artifactId>
                <version>${jetcache.version}</version>
            </dependency>
            <!--解决jetcache与springtest冲突-->
            <dependency>
                <groupId>org.objenesis</groupId>
                <artifactId>objenesis</artifactId>
                <version>${objenesis.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!--flatten pom-->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${flatten-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>flatten</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>flatten</goal>
                            </goals>
                            <configuration>
                                <flattenMode>oss</flattenMode>
                                <updatePomFile>true</updatePomFile>
                                <pomElements>
                                    <properties>remove</properties>
                                    <repositories>remove</repositories>
                                    <pluginRepositories>remove</pluginRepositories>
                                    <distributionManagement>remove</distributionManagement>
                                    <dependencyManagement>keep</dependencyManagement>
                                    <pluginManagement>keep</pluginManagement>
                                </pomElements>
                            </configuration>
                        </execution>
                        <execution>
                            <id>flatten-clean</id>
                            <phase>clean</phase>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>source-package</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <!--定义测试套件入口-->
                        <includes>
                            <include>${package}.TestEntry.java</include>
                        </includes>
                        <!--同一次测试最多尝试两次-->
                        <rerunFailingTestsCount>2</rerunFailingTestsCount>
                        <!--返回失败一次则跳过测试过程-->
                        <skipAfterFailureCount>1</skipAfterFailureCount>
                        <!--并发执行-->
                        <parallel>methods</parallel>
                        <threadCount>10</threadCount>
                    </configuration>
                </plugin>
                <!--check code style-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>checkstyle-verify</id>
                            <phase>verify</phase>
                            <configuration>
                                <skip>${disable.checks}</skip>
                                <consoleOutput>true</consoleOutput>
                                <failOnViolation>true</failOnViolation>
                                <violationSeverity>warning</violationSeverity>
                                <includeTestSourceDirectory>true</includeTestSourceDirectory>
                                <configLocation>com/geercode/creed/codecheck/checkstyle.xml</configLocation>
                                <headerLocation>${config.basedir}/codecheck/checkstyle-header.txt</headerLocation>
                                <suppressionsLocation>${config.basedir}/codecheck/checkstyle-suppressions.xml</suppressionsLocation>
                                <!--配置包控制文件路径-->
                                <propertyExpansion>com.geercode.importcontrol.file=${config.basedir}/codecheck/import-control.xml</propertyExpansion>
                            </configuration>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>com.geercode.creed</groupId>
                            <artifactId>creed-codecheck</artifactId>
                            <version>${creed.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!--阿里编码规约-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>
                    <configuration>
                        <skip>${disable.checks}</skip>
                        <includeTests>false</includeTests>
                        <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                        <targetJdk>${java.version}</targetJdk>
                        <printFailingErrors>true</printFailingErrors>
                        <failOnViolation>true</failOnViolation>
                        <!-- 代码检查规则 -->
                        <rulesets>
                            <ruleset>rulesets/java/ali-comment.xml</ruleset>
                            <ruleset>rulesets/java/ali-concurrent.xml</ruleset>
                            <ruleset>rulesets/java/ali-constant.xml</ruleset>
                            <ruleset>rulesets/java/ali-exception.xml</ruleset>
                            <ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>
                            <ruleset>rulesets/java/ali-oop.xml</ruleset>
                            <ruleset>rulesets/java/ali-orm.xml</ruleset>
                            <ruleset>rulesets/java/ali-other.xml</ruleset>
                            <ruleset>rulesets/java/ali-set.xml</ruleset>
                            <!--替换rulesets/java/ali-naming.xml,干掉与checkstyle重合又不好用的ClassNamingShouldBeCamelRule-->
                            <ruleset>com/geercode/creed/codecheck/rulesets/creed-naming.xml</ruleset>
                        </rulesets>
                    </configuration>
                    <executions>
                        <!-- 绑定pmd:check到verify生命周期 -->
                        <execution>
                            <id>pmd-check-verify</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                                <!--<goal>cpd-check</goal>-->
                            </goals>
                        </execution>
                    </executions>
                    <!-- p3c依赖 -->
                    <dependencies>
                        <dependency>
                            <groupId>com.alibaba.p3c</groupId>
                            <artifactId>p3c-pmd</artifactId>
                            <version>${p3c-pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>com.geercode.creed</groupId>
                            <artifactId>creed-codecheck</artifactId>
                            <version>${creed.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!--findbugs-->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>${findbugs-maven-plugin.version}</version>
                    <configuration>
                        <skip>${disable.checks}</skip>
                        <failOnError>true</failOnError>
                        <includeTests>false</includeTests>
                        <!-- 设置分析工作的等级，可以为Min、Default和Max -->
                        <effort>Max</effort>
                        <!-- Low、Medium和High (Low最严格) -->
                        <threshold>Low</threshold>
                        <!--findbugs需要检测的错误的配置文件-->
                        <includeFilterFile>${config.basedir}/codecheck/findbugs-include.xml</includeFilterFile>
                        <!--findbugs需要忽略的错误的配置文件-->
                        <excludeFilterFile>${config.basedir}/codecheck/findbugs-exclude.xml</excludeFilterFile>
                    </configuration>
                    <executions>
                        <execution>
                            <id>findbugs-verify</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--package-->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>build-info</goal>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${dockerfile-maven-plugin.version}</version>
                    <configuration>
                        <skip>true</skip>
                        <repository>${docker.image.prefix}/${project.artifactId}</repository>
                        <buildArgs>
                            <JAR_DIR>target</JAR_DIR>
                            <JAR_NAME>${project.build.finalName}.jar</JAR_NAME>
                            <CONFIG_LABEL>${docker.config.label}</CONFIG_LABEL>
                            <CONFIG_PROFILE>${docker.config.profile}</CONFIG_PROFILE>
                        </buildArgs>
                    </configuration>
                    <executions>
                        <execution>
                            <id>dockerfile-install</id>
                            <phase>install</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--deploy-->
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
